{
    "sourceFile": "src/App.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1665223112627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665223118571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n \r\n    //funcion que edita una cita por el id \r\n    const editarCita = (id,nuevasCitas) => {\r\n    \r\n-    // console.log(cita)\r\n+    console.log(guardarCitas)\r\n   }\r\n   return (\r\n     <Fragment>\r\n       \r\n"
                }
            ],
            "date": 1665223112627,
            "name": "Commit-0",
            "content": "import React, { Fragment, useState, useEffect } from 'react';\r\nimport FormularioJuridico from './components/personaJuridica/formulariojuridico/Formulario';\r\nimport Citajur from './components/personaJuridica/citasjuridico/ListaCita';\r\nimport Formulario from './components/personanatural/formularionatural/Formulario';\r\nimport Cita from './components/personanatural/citasnatural/ListaCita';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css'\r\nimport {MDBTable,MDBTableHead} from 'mdb-react-ui-kit';\r\nimport Swal from 'sweetalert2'\r\nimport Editar from  './components/personanatural/editar/editar'\r\n\r\nfunction App() {\r\n\r\n//personas juridicas\r\n  // Citas en local storage\r\n  let juridicasIniciales = JSON.parse(localStorage.getItem('juridicas'));\r\n  if(!juridicasIniciales) {\r\n    juridicasIniciales = [];\r\n  }\r\n  // Arreglo de juridica\r\n  const [juridicas, guardarjuridicas] = useState(juridicasIniciales);\r\n\r\n  // Use Effect para realizar ciertas operaciones cuando el state cambia\r\n  useEffect( () => {\r\n      let juridicasIniciales = JSON.parse(localStorage.getItem('juridicas'));\r\n\r\n      if(juridicasIniciales) {\r\n        localStorage.setItem('juridicas', JSON.stringify(juridicas))\r\n      } else {\r\n        localStorage.setItem('juridicas', JSON.stringify([]));\r\n      }\r\n  }, [juridicas] );\r\n\r\n  // Funci贸n que tome las juridicas actuales y agregue la nueva\r\n  const crearjuridica = juridico => {\r\n    guardarjuridicas([ ...juridicas, juridico ]);\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Yay...',\r\n      text: 'You have successfully added a new task!'\r\n    })\r\n  }\r\n\r\n  // Funci贸n que elimina una cita por su id\r\n  const eliminarjuridica = id => {\r\n     const nuevasjuridicas = juridicas.filter(juridico => juridico.id !== id );\r\n     guardarjuridicas(nuevasjuridicas);\r\n     Swal.fire({\r\n      icon: 'success',\r\n      title: 'Oops...',\r\n      text: 'You have successfully deleted a task!'\r\n  })\r\n  }\r\n\r\n  // Mensaje condicional\r\n  const titulo = juridicas.length === 0 ? 'No hay juridicas' : ' ';\r\n\r\n// persona natural\r\n// ___________________________________________________________\r\n   // Citas en local storage\r\n   let citasIniciales = JSON.parse(localStorage.getItem('citas'));\r\n   if(!citasIniciales) {\r\n     citasIniciales = [];\r\n   }\r\n \r\n   // Arreglo de citas\r\n   const [citas, guardarCitas] = useState(citasIniciales);\r\n   const [editarcita, guardarCitaeditar] =useState(citasIniciales)\r\n\r\n   // Use Effect para realizar ciertas operaciones cuando el state cambia\r\n   useEffect( () => {\r\n       let citasIniciales = JSON.parse(localStorage.getItem('citas'));\r\n \r\n       if(citasIniciales) {\r\n         localStorage.setItem('citas', JSON.stringify(citas))\r\n       } else {\r\n         localStorage.setItem('citas', JSON.stringify([]));\r\n       }\r\n   }, [citas] );\r\n \r\n   // Funci贸n que tome las citas actuales y agregue la nueva\r\n   const crearCita = cita => {\r\n     guardarCitas([ ...citas, cita ]); \r\n     Swal.fire({\r\n      icon: 'success',\r\n      title: 'Yay...',\r\n      text: 'You have successfully added a new task!'\r\n    })\r\n   }\r\n \r\n   // Funci贸n que elimina una cita por su id\r\n   const eliminarCita = id => {\r\n      const nuevasCitas = citas.filter(cita => cita.id !== id );\r\n      guardarCitas(nuevasCitas);\r\n      Swal.fire({\r\n        icon: 'success',\r\n        title: 'Oops...',\r\n        text: 'You have successfully deleted a task!'\r\n    })\r\n   }\r\n\r\n   //funcion que edita una cita por el id \r\n   const editarCita = (id,nuevasCitas) => {\r\n   \r\n    // console.log(cita)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      \r\n\r\n      <div className=\"container\">\r\n      <h1>BENEFICIARIOS FINALES - ACCION SA</h1>\r\n        <div className=\"row\">\r\n          <div className=\"one-half column\">\r\n              <FormularioJuridico \r\n                crearjuridica={crearjuridica}\r\n              />\r\n          </div>\r\n          <div className=\"one-half column\">\r\n              \r\n              <MDBTable responsive>\r\n                <MDBTableHead>\r\n                      <tr>\r\n                        <th scope='col'>Beneficiarios de:</th>\r\n                        <th scope='col'>Tipo de documento</th>\r\n                        <th scope='col'>Documento </th>\r\n                        <th scope='col'>Razon Social</th>\r\n                        <th scope='col'>Representante</th>\r\n                        <th scope='col'>eliminar</th>\r\n                      \r\n                      </tr>\r\n                </MDBTableHead>\r\n              </MDBTable>\r\n             \r\n              {juridicas.map(juridico => (\r\n                <div>\r\n                  <Citajur\r\n                    key={juridico.id}\r\n                    juridico={juridico}\r\n                    eliminarjuridica={eliminarjuridica}\r\n                  />\r\n                </div>\r\n               \r\n              ))}\r\n              <h2>{titulo}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n{/* personas */}\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"one-half column\">\r\n          <Formulario \r\n                crearCita={crearCita}\r\n                editarCita={editarCita}\r\n              />\r\n          </div>\r\n          <div className=\"one-half column\">\r\n              {citas.map(cita => (\r\n                <Cita\r\n                  key={cita.id}\r\n                  cita={cita}\r\n                  editarCita={editarCita}\r\n                  eliminarCita={eliminarCita}\r\n                />\r\n              ))}\r\n              <h2>{titulo}</h2>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;"
        }
    ]
}